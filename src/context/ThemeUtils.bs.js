// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Core__JSON from "@rescript/core/src/Core__JSON.bs.js";
import * as LogicUtils from "../utils/LogicUtils.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as HandlingEvents from "../components/HandlingEvents.bs.js";

function useThemeFromEvent(param) {
  var match = React.useState(function () {});
  var setEventTheme = match[1];
  React.useEffect(function () {
    var handleEventMessage = function (ev) {
      var optionalDict = HandlingEvents.getEventDict(ev);
      if (optionalDict === undefined) {
        return;
      }
      var dict = Caml_option.valFromOption(optionalDict);
      var optionalEventName = Core__Option.flatMap(
        dict["eventType"],
        Core__JSON.Decode.string,
      );
      if (optionalEventName !== undefined) {
        if (optionalEventName === "AuthenticationDetails") {
          var payloadDict = Core__Option.flatMap(
            dict["payload"],
            Core__JSON.Decode.object,
          );
          var theme = Core__Option.mapOr(payloadDict, "", function (finalDict) {
            return LogicUtils.getString(finalDict, "theme", "");
          });
          return Curry._1(setEventTheme, function (param) {
            return theme;
          });
        }
        if (optionalEventName === "themeToggle") {
          var theme$1 = LogicUtils.getString(dict, "payload", "");
          return Curry._1(setEventTheme, function (param) {
            return theme$1;
          });
        }
        console.log("Event name is " + optionalEventName + "", dict);
        return;
      } else {
        console.log("Event Data is not found", dict);
        return;
      }
    };
    window.addEventListener("message", handleEventMessage);
    return function (param) {
      window.removeEventListener("message", handleEventMessage);
    };
  }, []);
  return match[0];
}

export { useThemeFromEvent };
/* react Not a pure module */
