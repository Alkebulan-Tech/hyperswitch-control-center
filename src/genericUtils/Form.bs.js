// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ReactFinalForm from "../libraries/ReactFinalForm.bs.js";
import * as ReactFinalForm$1 from "react-final-form";

function defaultSubmit(param, param$1) {
  return Promise.resolve(null);
}

function Form$FormBody(props) {
  var submitOnEnter = props.submitOnEnter;
  var form = ReactFinalForm$1.useForm();
  var formRef = React.useRef(null);
  React.useEffect(function () {
    var onKeyDown = function (ev) {
      var keyCode = ev.keyCode;
      var tagName = document.activeElement.tagName;
      if (keyCode !== 13) {
        return;
      }
      var element = formRef.current;
      var enterIsFromWithinForm =
        element == null ? false : element.contains(document.activeElement);
      if (
        tagName !== "INPUT" &&
        tagName !== "TEXTAREA" &&
        ((submitOnEnter && !enterIsFromWithinForm) || enterIsFromWithinForm)
      ) {
        Curry._1(form.submit, undefined);
        return;
      }
    };
    window.addEventListener("keydown", onKeyDown);
    return function (param) {
      window.removeEventListener("keydown", onKeyDown);
    };
  }, []);
  return React.createElement(
    "form",
    {
      ref: Caml_option.some(formRef),
      className: props.formClass,
      onSubmit: props.handleSubmit,
    },
    props.children,
  );
}

var FormBody = {
  make: Form$FormBody,
};

function Form(props) {
  var submitOnEnter = props.submitOnEnter;
  var formClass = props.formClass;
  var onSubmit = props.onSubmit;
  var children = props.children;
  var onSubmit$1 = onSubmit !== undefined ? onSubmit : defaultSubmit;
  var formClass$1 = formClass !== undefined ? formClass : "";
  var submitOnEnter$1 = submitOnEnter !== undefined ? submitOnEnter : false;
  return React.createElement(ReactFinalForm$1.Form, {
    initialValues: props.initialValues,
    onSubmit: onSubmit$1,
    render: function (param) {
      return React.createElement(Form$FormBody, {
        children: children,
        formClass: formClass$1,
        handleSubmit: param.handleSubmit,
        submitOnEnter: submitOnEnter$1,
      });
    },
    subscription: ReactFinalForm.subscribeToValues,
    validate: props.validate,
  });
}

var make = Form;

export { defaultSubmit, FormBody, make };
/* react Not a pure module */
