// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as APIUtils from "../APIUtils/APIUtils.bs.js";
import * as ToastState from "../../hooks/ToastState.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";

function useGetOrdersData(orderId, refetchCounter, setScreenState) {
  var match = React.useState(function () {
    return null;
  });
  var setOrderData = match[1];
  var fetchDetails = APIUtils.useGetMethod(undefined, undefined);
  var accountUrl = APIUtils.getURL(
    /* ORDERS */ 13,
    /* Get */ 0,
    Caml_option.some(orderId),
    undefined,
    undefined,
    undefined,
    undefined,
    "expand_attempts=true",
    undefined,
  );
  var showToast = ToastState.useShowToast(undefined);
  var setLoadDataForOrders = async function (param) {
    try {
      Curry._1(setScreenState, function (param) {
        return /* Loading */ 0;
      });
      if (orderId.length === 0) {
        return;
      }
      var orderDataResponse = await Curry._1(fetchDetails, accountUrl);
      Curry._1(setOrderData, function (param) {
        return orderDataResponse;
      });
      return Curry._1(setScreenState, function (param) {
        return /* Success */ 1;
      });
    } catch (raw_e) {
      var e = Caml_js_exceptions.internalToOCamlException(raw_e);
      if (e.RE_EXN_ID === Js_exn.$$Error) {
        var message = e._1.message;
        if (message !== undefined) {
          if (message.includes("HE_02")) {
            return Curry._1(setScreenState, function (param) {
              return /* Custom */ 2;
            });
          } else {
            Curry._8(
              showToast,
              "Failed to Fetch!",
              /* ToastError */ 0,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
            );
            return Curry._1(setScreenState, function (param) {
              return /* Error */ {
                _0: "Failed to Fetch!",
              };
            });
          }
        } else {
          return Curry._1(setScreenState, function (param) {
            return /* Error */ {
              _0: "Failed to Fetch!",
            };
          });
        }
      }
      throw e;
    }
  };
  React.useEffect(
    function () {
      if (orderId.length !== 0) {
        setLoadDataForOrders(undefined);
      }
    },
    [orderId, refetchCounter],
  );
  return match[0];
}

export { useGetOrdersData };
/* react Not a pure module */
