// Generated by ReScript, PLEASE EDIT WITH CARE

import * as LogicUtils from "../../../utils/LogicUtils.bs.js";

function getSessionTokenDict(values, applePayIntegrationType) {
  return LogicUtils.getDictfromDict(
    LogicUtils.getDictfromDict(
      LogicUtils.getDictfromDict(
        LogicUtils.getDictFromJsonObject(values),
        "apple_pay_combined",
      ),
      applePayIntegrationType,
    ),
    "session_token_data",
  );
}

function validate(values, mandateKeys, integrationType) {
  var dict = getSessionTokenDict(values, integrationType);
  var errorDict = {};
  mandateKeys.forEach(function (key) {
    var value = LogicUtils.getString(dict, key, "");
    if (LogicUtils.isEmptyString(value)) {
      errorDict[key] = "" + key + " cannot be empty!";
      return;
    }
  });
  return errorDict;
}

function constructApplePayMetadata(values, metadataInputs, integrationType) {
  var paymentRequestData = LogicUtils.getDictfromDict(
    LogicUtils.getDictfromDict(metadataInputs, "apple_pay"),
    "payment_request_data",
  );
  var dict = LogicUtils.getDictFromJsonObject(values);
  var applePayDict = LogicUtils.getDictfromDict(
    LogicUtils.getDictfromDict(dict, "apple_pay_combined"),
    integrationType,
  );
  dict["apple_pay_combined"] = {};
  applePayDict["payment_request_data"] = paymentRequestData;
  dict["apple_pay_combined"] = Object.fromEntries([
    [integrationType, applePayDict],
  ]);
  return dict;
}

function constructVerifyApplePayReq(values, connectorID) {
  var domainName = LogicUtils.getString(
    getSessionTokenDict(values, "simplified"),
    "initiative_context",
    "",
  );
  var data = JSON.stringify({
    domain_names: [domainName],
    merchant_connector_account_id: connectorID,
  });
  var body = data !== undefined ? LogicUtils.safeParse(data) : {};
  return [body, domainName];
}

function customApplePlayFields(field) {
  if (field === "merchant_business_country") {
    return "merchant_business_country";
  } else {
    return "other";
  }
}

export {
  getSessionTokenDict,
  validate,
  constructApplePayMetadata,
  constructVerifyApplePayReq,
  customApplePlayFields,
};
/* LogicUtils Not a pure module */
