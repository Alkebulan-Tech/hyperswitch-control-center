// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Button from "../../../components/Button.bs.js";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as Recoil from "recoil";
import * as UIUtils from "../../../utils/UIUtils.bs.js";
import * as APIUtils from "../../APIUtils/APIUtils.bs.js";
import * as PageUtils from "../../Utils/PageUtils.bs.js";
import * as LogicUtils from "../../../utils/LogicUtils.bs.js";
import * as ToastState from "../../../hooks/ToastState.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as LoadedTable from "../../../components/LoadedTable.bs.js";
import * as HSLocalStorage from "../../HSLocalStorage.bs.js";
import * as HyperswitchAtom from "../../../Recoils/HyperswitchAtom.bs.js";
import * as PageLoaderWrapper from "../../Utils/PageLoaderWrapper.bs.js";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";
import * as HyperSwitchAuthUtils from "../../login/HSwitchLoginFlow/HyperSwitchAuthUtils.bs.js";
import * as SwitchMerchantListHook from "../../SwitchMerchant/SwitchMerchantListHook.bs.js";
import * as HSwitchProfileSettingsEntity from "./HSwitchProfileSettingsEntity.bs.js";

function HSwitchProfileSettings$MerchantDetailsSection(props) {
  var match = React.useState(function () {
    return /* Loading */ 0;
  });
  var setScreenState = match[1];
  var match$1 = React.useState(function () {
    return 0;
  });
  var fetchSwitchMerchantList =
    SwitchMerchantListHook.useFetchSwitchMerchantList(undefined);
  var switchMerchantListValue = Recoil.useRecoilValue(
    HyperswitchAtom.switchMerchantListAtom,
  );
  React.useEffect(function () {
    try {
      Curry._1(fetchSwitchMerchantList, undefined);
      Curry._1(setScreenState, function (param) {
        return /* Success */ 1;
      });
    } catch (raw_exn) {
      var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
      if (exn.RE_EXN_ID === Js_exn.$$Error) {
        Curry._1(setScreenState, function (param) {
          return /* Custom */ 2;
        });
      } else {
        throw exn;
      }
    }
  }, []);
  return React.createElement(PageLoaderWrapper.make, {
    children: Caml_option.some(
      React.createElement(
        "div",
        undefined,
        React.createElement(
          "div",
          {
            className:
              "border bg-gray-50 rounded-t-lg border-b-0 w-full px-10 py-6",
          },
          React.createElement(
            "p",
            {
              className: "font-semibold text-fs-18",
            },
            "Merchant Info",
          ),
        ),
        React.createElement(LoadedTable.make, {
          visibleColumns: HSwitchProfileSettingsEntity.visibleColumns,
          title: "Merchant Info",
          actualData: switchMerchantListValue.map(function (prim) {
            return prim;
          }),
          totalResults: switchMerchantListValue.length,
          resultsPerPage: 7,
          offset: match$1[0],
          setOffset: match$1[1],
          entity: HSwitchProfileSettingsEntity.merchantTableEntity,
          currrentFetchCount: switchMerchantListValue.length,
          hideTitle: true,
        }),
      ),
    ),
    screenState: match[0],
    sectionHeight: "h-40-vh",
  });
}

var MerchantDetailsSection = {
  make: HSwitchProfileSettings$MerchantDetailsSection,
};

function HSwitchProfileSettings$ResetPassword(props) {
  var match = React.useState(function () {
    return false;
  });
  var setIsLoading = match[1];
  var email = HSLocalStorage.getFromMerchantDetails("email");
  var isPlayground = HSLocalStorage.getIsPlaygroundFromLocalStorage(undefined);
  var updateDetails = APIUtils.useUpdateMethod(false, undefined);
  var showToast = ToastState.useShowToast(undefined);
  var resetPassword = async function (body) {
    Curry._1(setIsLoading, function (param) {
      return true;
    });
    try {
      var url = APIUtils.getURL(
        /* USERS */ 22,
        /* Post */ 2,
        undefined,
        undefined,
        "FORGOT_PASSWORD",
        undefined,
        undefined,
        undefined,
        undefined,
      );
      await Curry._7(
        updateDetails,
        url,
        body,
        /* Post */ 2,
        undefined,
        undefined,
        undefined,
        undefined,
      );
      Curry._8(
        showToast,
        "Please check your registered e-mail",
        /* ToastSuccess */ 3,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
      return Curry._1(setIsLoading, function (param) {
        return false;
      });
    } catch (exn) {
      Curry._8(
        showToast,
        "Reset Password Failed, Try again",
        /* ToastError */ 0,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
      return Curry._1(setIsLoading, function (param) {
        return false;
      });
    }
  };
  return React.createElement(
    "div",
    {
      className: "flex gap-10 items-center",
    },
    React.createElement(
      "p",
      {
        className: "text-hyperswitch_black text-base  w-1/5",
      },
      "Password:",
    ),
    React.createElement(
      "div",
      {
        className:
          "flex flex-col gap-5 items-start md:flex-row md:items-center flex-wrap",
      },
      React.createElement(
        "p",
        {
          className:
            "text-hyperswitch_black opacity-50 text-base font-semibold break-all",
        },
        "********",
      ),
      React.createElement(UIUtils.RenderIf.make, {
        condition: !isPlayground,
        children: React.createElement(Button.make, {
          loadingText: "Sending mail...",
          buttonState: match[0] ? /* Loading */ 1 : /* Normal */ 0,
          text: "Reset Password",
          buttonType: /* Secondary */ 1,
          buttonSize: /* Small */ 2,
          onClick: function (param) {
            var body = HyperSwitchAuthUtils.getEmailBody(
              email,
              undefined,
              undefined,
            );
            resetPassword(body);
          },
        }),
      }),
    ),
  );
}

var ResetPassword = {
  make: HSwitchProfileSettings$ResetPassword,
};

function HSwitchProfileSettings$BasicDetailsSection(props) {
  var titleClass = "text-hyperswitch_black text-base  w-1/5";
  var subTitleClass =
    "text-hyperswitch_black opacity-50 text-base font-semibold break-all";
  var userName = HSLocalStorage.getFromUserDetails("name");
  var userTitle = LogicUtils.userNameToTitle(userName);
  var isPlayground = HSLocalStorage.getIsPlaygroundFromLocalStorage(undefined);
  var getMerchantInfoValue = function (value) {
    var merchantDetails = HSLocalStorage.getInfoFromLocalStorage("merchant");
    return LogicUtils.getString(merchantDetails, value, "Not Added");
  };
  var featureFlagDetails = Recoil.useRecoilValue(
    HyperswitchAtom.featureFlagAtom,
  );
  return React.createElement(
    "div",
    undefined,
    React.createElement(
      "div",
      {
        className: "border bg-gray-50 rounded-t-lg w-full px-10 py-6",
      },
      React.createElement(
        "p",
        {
          className: "font-semibold text-fs-18",
        },
        "User Info",
      ),
    ),
    React.createElement(
      "div",
      {
        className:
          "flex flex-col gap-5 bg-white border border-t-0 rounded-b-lg w-full px-10 pt-6 pb-10",
      },
      React.createElement(
        "div",
        {
          className: "flex gap-10 items-center",
        },
        React.createElement(
          "p",
          {
            className: titleClass,
          },
          "Name:",
        ),
        React.createElement(
          "p",
          {
            className: subTitleClass,
          },
          LogicUtils.isNonEmptyString(userName) ? userTitle : "--",
        ),
      ),
      React.createElement("hr", undefined),
      React.createElement(
        "div",
        {
          className: "flex gap-10 items-center",
        },
        React.createElement(
          "p",
          {
            className: titleClass,
          },
          "Email:",
        ),
        React.createElement(
          "p",
          {
            className: subTitleClass,
          },
          getMerchantInfoValue("email"),
        ),
      ),
      React.createElement("hr", undefined),
      React.createElement(UIUtils.RenderIf.make, {
        condition: !isPlayground && featureFlagDetails.email,
        children: React.createElement(HSwitchProfileSettings$ResetPassword, {}),
      }),
    ),
  );
}

var BasicDetailsSection = {
  make: HSwitchProfileSettings$BasicDetailsSection,
};

function HSwitchProfileSettings(props) {
  return React.createElement(
    "div",
    {
      className: "flex flex-col overflow-scroll gap-8",
    },
    React.createElement(PageUtils.PageHeading.make, {
      title: "Profile",
      subTitle: "Manage your profile settings here",
    }),
    React.createElement(
      "div",
      {
        className: "flex flex-col flex-wrap  gap-12",
      },
      React.createElement(HSwitchProfileSettings$BasicDetailsSection, {}),
      React.createElement(HSwitchProfileSettings$MerchantDetailsSection, {}),
    ),
  );
}

var make = HSwitchProfileSettings;

export { MerchantDetailsSection, ResetPassword, BasicDetailsSection, make };
/* react Not a pure module */
