// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as LogUtils from "./LogUtils.bs.js";
import * as LogicUtils from "../../../../utils/LogicUtils.bs.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";

function getLogType(dict) {
  if (Core__Option.isSome(dict["connector_name"])) {
    return /* CONNECTOR */ 3;
  } else if (Core__Option.isSome(dict["request_id"])) {
    return /* API_EVENTS */ 1;
  } else if (Core__Option.isSome(dict["component"])) {
    return /* SDK */ 0;
  } else {
    return /* WEBHOOKS */ 2;
  }
}

function getTagName(tag) {
  switch (tag) {
    case /* SDK */ 0:
      return "SDK";
    case /* API_EVENTS */ 1:
      return "API";
    case /* WEBHOOKS */ 2:
      return "WEBHOOKS";
    case /* CONNECTOR */ 3:
      return "CONNECTOR";
  }
}

function setDefaultValue(initialData, setLogDetails, setSelectedOption) {
  var match = getLogType(initialData);
  switch (match) {
    case /* SDK */ 0:
      var request = JSON.stringify(
        LogicUtils.getJsonFromArrayOfJson(
          Object.entries(initialData).filter(function (entry) {
            return !LogUtils.filteredKeys.includes(entry[0]);
          }),
        ),
      );
      var response =
        LogicUtils.getString(initialData, "log_type", "") === "ERROR"
          ? LogicUtils.getString(initialData, "value", "")
          : "";
      Curry._1(setLogDetails, function (param) {
        return {
          response: response,
          request: request,
          data: initialData,
        };
      });
      return Curry._1(setSelectedOption, function (param) {
        return {
          value: 0,
          optionType: /* SDK */ 0,
        };
      });
    case /* API_EVENTS */ 1:
      var request$1 = LogicUtils.getString(initialData, "request", "");
      var response$1 = LogicUtils.getString(initialData, "response", "");
      Curry._1(setLogDetails, function (param) {
        return {
          response: response$1,
          request: request$1,
          data: initialData,
        };
      });
      return Curry._1(setSelectedOption, function (param) {
        return {
          value: 0,
          optionType: /* API_EVENTS */ 1,
        };
      });
    case /* WEBHOOKS */ 2:
      var request$2 = LogicUtils.getString(
        initialData,
        "outgoing_webhook_event_type",
        "",
      );
      var response$2 = LogicUtils.getString(initialData, "content", "");
      Curry._1(setLogDetails, function (param) {
        return {
          response: response$2,
          request: request$2,
          data: initialData,
        };
      });
      return Curry._1(setSelectedOption, function (param) {
        return {
          value: 0,
          optionType: /* WEBHOOKS */ 2,
        };
      });
    case /* CONNECTOR */ 3:
      var request$3 = LogicUtils.getString(initialData, "request", "");
      var response$3 = LogicUtils.getString(initialData, "masked_response", "");
      Curry._1(setLogDetails, function (param) {
        return {
          response: response$3,
          request: request$3,
          data: initialData,
        };
      });
      return Curry._1(setSelectedOption, function (param) {
        return {
          value: 0,
          optionType: /* CONNECTOR */ 3,
        };
      });
  }
}

export { getLogType, getTagName, setDefaultValue };
/* LogUtils Not a pure module */
