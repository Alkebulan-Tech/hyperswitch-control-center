// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Recoil from "recoil";
import * as UIUtils from "../../utils/UIUtils.bs.js";
import * as ACLButton from "../../components/ACLButton.bs.js";
import * as MixpanelHook from "../MixpanelHook.bs.js";
import * as HyperswitchAtom from "../../Recoils/HyperswitchAtom.bs.js";
import * as DownloadReportModal from "./DownloadReportModal.bs.js";

function GenerateReport(props) {
  var mixpanelEvent = MixpanelHook.useSendEvent(undefined);
  var match = React.useState(function () {
    return false;
  });
  var setReportModal = match[1];
  var reportModal = match[0];
  var userPermissionJson = Recoil.useRecoilValue(
    HyperswitchAtom.userPermissionAtom,
  );
  return React.createElement(
    React.Fragment,
    undefined,
    React.createElement(ACLButton.make, {
      text: "Generate Reports",
      buttonType: /* Primary */ 0,
      buttonSize: /* XSmall */ 3,
      onClick: function (param) {
        Curry._1(setReportModal, function (param) {
          return true;
        });
        Curry._4(
          mixpanelEvent,
          "generate_reports",
          undefined,
          undefined,
          undefined,
        );
      },
      access: userPermissionJson.operationsManage,
      toolTipPosition: /* Left */ 2,
    }),
    React.createElement(UIUtils.RenderIf.make, {
      condition: reportModal,
      children: React.createElement(DownloadReportModal.make, {
        reportModal: reportModal,
        setReportModal: setReportModal,
        entityName: props.entityName,
      }),
    }),
  );
}

var make = GenerateReport;

export { make };
/* react Not a pure module */
