// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as LogicUtils from "../../../utils/LogicUtils.bs.js";
import * as InputFields from "../../../components/InputFields.bs.js";
import * as CountryUtils from "../../Utils/CountryUtils.bs.js";
import * as FormRenderer from "../../../components/form/FormRenderer.bs.js";
import * as HSwitchUtils from "../../Utils/HSwitchUtils.bs.js";

function getStringFromVariant(key) {
  switch (key) {
    case /* POCemail */ 0:
      return "poc_email";
    case /* IsCompleted */ 1:
      return "is_completed";
    case /* BusinessName */ 2:
      return "legal_business_name";
    case /* Country */ 3:
      return "business_location";
    case /* Website */ 4:
      return "business_website";
    case /* POCName */ 5:
      return "poc_name";
    case /* BusinessTAN */ 6:
      return "comments";
  }
}

var businessName = FormRenderer.makeFieldInfo(
  "Legal Business Name",
  undefined,
  "legal_business_name",
  function (param) {
    return function (param$1) {
      var param$2;
      var param$3;
      var param$4;
      var param$5;
      var param$6;
      var param$7;
      var param$8;
      var param$9;
      var param$10;
      var param$11;
      var param$12;
      var param$13;
      var param$14;
      var param$15;
      var param$16;
      var param$17;
      var param$18;
      var param$19;
      var param$20;
      var param$21;
      var param$22;
      var param$23;
      var param$24;
      var param$25;
      var param$26;
      var param$27;
      return InputFields.textInput(
        param,
        param$1,
        param$2,
        param$3,
        param$4,
        param$5,
        param$6,
        param$7,
        param$8,
        param$9,
        param$10,
        param$11,
        param$12,
        param$13,
        param$14,
        param$15,
        param$16,
        param$17,
        param$18,
        param$19,
        param$20,
        param$21,
        param$22,
        param$23,
        param$24,
        param$25,
        param$26,
        param$27,
      );
    };
  },
  undefined,
  undefined,
  undefined,
  undefined,
  "Eg: HyperSwitch Pvt Ltd",
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  true,
  undefined,
  undefined,
  undefined,
);

var website = FormRenderer.makeFieldInfo(
  "Business Website",
  undefined,
  "business_website",
  function (param) {
    return function (param$1) {
      var param$2;
      var param$3;
      var param$4;
      var param$5;
      var param$6;
      var param$7;
      var param$8;
      var param$9;
      var param$10;
      var param$11;
      var param$12;
      var param$13;
      var param$14;
      var param$15;
      var param$16;
      var param$17;
      var param$18;
      var param$19;
      var param$20;
      var param$21;
      var param$22;
      var param$23;
      var param$24;
      var param$25;
      var param$26;
      var param$27;
      return InputFields.textInput(
        param,
        param$1,
        param$2,
        param$3,
        param$4,
        param$5,
        param$6,
        param$7,
        param$8,
        param$9,
        param$10,
        param$11,
        param$12,
        param$13,
        param$14,
        param$15,
        param$16,
        param$17,
        param$18,
        param$19,
        param$20,
        param$21,
        param$22,
        param$23,
        param$24,
        param$25,
        param$26,
        param$27,
      );
    };
  },
  undefined,
  undefined,
  undefined,
  undefined,
  "Enter a website",
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  true,
  undefined,
  undefined,
  undefined,
);

var pocName = FormRenderer.makeFieldInfo(
  "Contact Name",
  undefined,
  "poc_name",
  function (param) {
    return function (param$1) {
      var param$2;
      var param$3;
      var param$4;
      var param$5;
      var param$6;
      var param$7;
      var param$8;
      var param$9;
      var param$10;
      var param$11;
      var param$12;
      var param$13;
      var param$14;
      var param$15;
      var param$16;
      var param$17;
      var param$18;
      var param$19;
      var param$20;
      var param$21;
      var param$22;
      var param$23;
      var param$24;
      var param$25;
      var param$26;
      var param$27;
      return InputFields.textInput(
        param,
        param$1,
        param$2,
        param$3,
        param$4,
        param$5,
        param$6,
        param$7,
        param$8,
        param$9,
        param$10,
        param$11,
        param$12,
        param$13,
        param$14,
        param$15,
        param$16,
        param$17,
        param$18,
        param$19,
        param$20,
        param$21,
        param$22,
        param$23,
        param$24,
        param$25,
        param$26,
        param$27,
      );
    };
  },
  undefined,
  undefined,
  undefined,
  undefined,
  "Eg: Jack Ryan",
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  true,
  undefined,
  undefined,
  undefined,
);

var pocEmail = FormRenderer.makeFieldInfo(
  "Contact Email",
  undefined,
  "poc_email",
  function (param) {
    return function (param$1) {
      var param$2;
      var param$3;
      var param$4;
      var param$5;
      var param$6;
      var param$7;
      var param$8;
      var param$9;
      var param$10;
      var param$11;
      var param$12;
      var param$13;
      var param$14;
      var param$15;
      var param$16;
      var param$17;
      var param$18;
      var param$19;
      var param$20;
      var param$21;
      var param$22;
      var param$23;
      var param$24;
      var param$25;
      var param$26;
      var param$27;
      return InputFields.textInput(
        param,
        param$1,
        param$2,
        param$3,
        param$4,
        param$5,
        param$6,
        param$7,
        param$8,
        param$9,
        param$10,
        param$11,
        param$12,
        param$13,
        param$14,
        param$15,
        param$16,
        param$17,
        param$18,
        param$19,
        param$20,
        param$21,
        param$22,
        param$23,
        param$24,
        param$25,
        param$26,
        param$27,
      );
    };
  },
  undefined,
  undefined,
  undefined,
  undefined,
  "Eg: jackryan@hyperswitch.io",
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  true,
  undefined,
  undefined,
  undefined,
);

var businessTAN = FormRenderer.makeFieldInfo(
  "Tax Identification Number",
  undefined,
  "comments",
  function (param) {
    return function (param$1) {
      var param$2;
      var param$3;
      var param$4;
      var param$5;
      var param$6;
      var param$7;
      var param$8;
      var param$9;
      var param$10;
      var param$11;
      var param$12;
      var param$13;
      var param$14;
      var param$15;
      var param$16;
      var param$17;
      var param$18;
      var param$19;
      var param$20;
      var param$21;
      var param$22;
      var param$23;
      var param$24;
      var param$25;
      var param$26;
      var param$27;
      return InputFields.textInput(
        param,
        param$1,
        param$2,
        param$3,
        param$4,
        param$5,
        param$6,
        param$7,
        param$8,
        param$9,
        param$10,
        param$11,
        param$12,
        param$13,
        param$14,
        param$15,
        param$16,
        param$17,
        param$18,
        param$19,
        param$20,
        param$21,
        param$22,
        param$23,
        param$24,
        param$25,
        param$26,
        param$27,
      );
    };
  },
  undefined,
  undefined,
  undefined,
  undefined,
  "Eg. Enter EIN No. for US, VAT No. for EU, etc",
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  true,
  undefined,
  undefined,
  undefined,
);

var arg = CountryUtils.countriesList.map(CountryUtils.getCountryOption);

var countryField = FormRenderer.makeFieldInfo(
  "Business Country",
  undefined,
  "business_location",
  function (param) {
    return function (param$1) {
      var param$2 = "Select Country";
      var param$3 = true;
      var param$4;
      var param$5;
      var param$6 = true;
      var param$7 = "pr-3";
      var param$8;
      var param$9;
      var param$10 = "max-h-48";
      var param$11;
      var param$12;
      var param$13;
      var param$14;
      var param$15;
      var param$16;
      var param$17;
      var param$18;
      var param$19;
      var param$20;
      var param$21;
      var param$22;
      var param$23;
      var param$24;
      var param$25;
      var param$26;
      var param$27;
      var param$28;
      var param$29;
      var param$30;
      return InputFields.selectInput(
        param,
        arg,
        param$1,
        param$2,
        param$3,
        param$4,
        param$5,
        param$6,
        param$7,
        param$8,
        param$9,
        param$10,
        param$11,
        param$12,
        param$13,
        param$14,
        param$15,
        param$16,
        param$17,
        param$18,
        param$19,
        param$20,
        param$21,
        param$22,
        param$23,
        param$24,
        param$25,
        param$26,
        param$27,
        param$28,
        param$29,
        param$30,
      );
    };
  },
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  true,
  undefined,
  undefined,
  undefined,
);

function validateEmptyValue(key, errors) {
  switch (key) {
    case /* POCemail */ 0:
      errors[getStringFromVariant(key)] =
        "Please enter a Point of Contact Email";
      return;
    case /* IsCompleted */ 1:
      return;
    case /* BusinessName */ 2:
      errors[getStringFromVariant(key)] = "Please enter a Business Name";
      return;
    case /* Country */ 3:
      errors[getStringFromVariant(key)] = "Please select a Country";
      return;
    case /* Website */ 4:
      errors[getStringFromVariant(key)] = "Please enter a Website";
      return;
    case /* POCName */ 5:
      errors[getStringFromVariant(key)] =
        "Please enter a Point of Contact Name";
      return;
    case /* BusinessTAN */ 6:
      errors[getStringFromVariant(key)] = "Please enter a Business TAN";
      return;
  }
}

function getFormField(columnType) {
  switch (columnType) {
    case /* POCemail */ 0:
      return pocEmail;
    case /* BusinessName */ 2:
      return businessName;
    case /* IsCompleted */ 1:
    case /* Country */ 3:
      return countryField;
    case /* Website */ 4:
      return website;
    case /* POCName */ 5:
      return pocName;
    case /* BusinessTAN */ 6:
      return businessTAN;
  }
}

var formFields = [/* Country */ 3, /* POCemail */ 0];

var formFieldsForQuickStart = [
  /* BusinessName */ 2, /* Country */ 3, /* Website */ 4, /* POCName */ 5,
  /* POCemail */ 0, /* BusinessTAN */ 6,
];

function validateCustom(key, errors, value) {
  if (key !== 4) {
    if (key !== 0 || !HSwitchUtils.isValidEmail(value)) {
      return;
    } else {
      errors[getStringFromVariant(key)] = "Please enter valid email id";
      return;
    }
  } else if (!/^https:\/\//i.test(value) || value.includes("localhost")) {
    errors[getStringFromVariant(key)] = "Please Enter Valid URL";
    return;
  } else {
    return;
  }
}

function validateForm(values, fieldsToValidate, setIsDisabled) {
  var errors = {};
  var valuesDict = LogicUtils.getDictFromJsonObject(values);
  fieldsToValidate.forEach(function (key) {
    var value = LogicUtils.getString(valuesDict, getStringFromVariant(key), "");
    if (value.length < 1) {
      return validateEmptyValue(key, errors);
    } else {
      return validateCustom(key, errors, value);
    }
  });
  if (Object.keys(errors).length > 0) {
    Curry._1(setIsDisabled, function (param) {
      return true;
    });
  } else {
    Curry._1(setIsDisabled, function (param) {
      return false;
    });
  }
  return errors;
}

function getJsonString(valueDict, key) {
  return LogicUtils.getString(valueDict, getStringFromVariant(key), "");
}

function getBody(values) {
  var valuesDict = LogicUtils.getDictFromJsonObject(values);
  var prodOnboardingpayload = {};
  LogicUtils.setOptionString(
    prodOnboardingpayload,
    "poc_email",
    LogicUtils.getOptionString(valuesDict, "poc_email"),
  );
  LogicUtils.setOptionBool(prodOnboardingpayload, "is_completed", true);
  LogicUtils.setOptionString(
    prodOnboardingpayload,
    "legal_business_name",
    LogicUtils.getOptionString(valuesDict, "legal_business_name"),
  );
  LogicUtils.setOptionString(
    prodOnboardingpayload,
    "business_location",
    LogicUtils.getOptionString(valuesDict, "business_location"),
  );
  LogicUtils.setOptionString(
    prodOnboardingpayload,
    "business_website",
    LogicUtils.getOptionString(valuesDict, "business_website"),
  );
  LogicUtils.setOptionString(
    prodOnboardingpayload,
    "poc_name",
    LogicUtils.getOptionString(valuesDict, "poc_name"),
  );
  LogicUtils.setOptionString(
    prodOnboardingpayload,
    "comments",
    LogicUtils.getOptionString(valuesDict, "comments"),
  );
  return prodOnboardingpayload;
}

var errorClass = "text-sm leading-4 font-medium text-start ml-1 mt-2";

export {
  errorClass,
  getStringFromVariant,
  businessName,
  website,
  pocName,
  pocEmail,
  businessTAN,
  countryField,
  validateEmptyValue,
  getFormField,
  formFields,
  formFieldsForQuickStart,
  validateCustom,
  validateForm,
  getJsonString,
  getBody,
};
/* businessName Not a pure module */
