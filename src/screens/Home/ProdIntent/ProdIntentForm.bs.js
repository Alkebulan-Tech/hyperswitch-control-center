// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as APIUtils from "../../APIUtils/APIUtils.bs.js";
import * as LogicUtils from "../../../utils/LogicUtils.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as GlobalProvider from "../../../entryPoints/Provider/GlobalProvider.bs.js";
import * as HSLocalStorage from "../../HSLocalStorage.bs.js";
import * as ProdVerifyModal from "./ProdVerifyModal.bs.js";
import * as ProdVerifyModalUtils from "./ProdVerifyModalUtils.bs.js";

function ProdIntentForm(props) {
  var fetchDetails = APIUtils.useGetMethod(undefined, undefined);
  var email = HSLocalStorage.getFromMerchantDetails("email");
  var match = React.useContext(GlobalProvider.defaultContext);
  var setIsProdIntentCompleted = match.setIsProdIntentCompleted;
  var match$1 = React.useState(function () {
    return {};
  });
  var setInitialValues = match$1[1];
  var getProdVerifyDetails = async function (param) {
    try {
      var url =
        "" +
        APIUtils.getURL(
          /* USERS */ 22,
          /* Get */ 0,
          undefined,
          undefined,
          "USER_DATA",
          undefined,
          undefined,
          undefined,
          undefined,
        ) +
        "?keys=ProdIntent";
      var res = await Curry._1(fetchDetails, url);
      var firstValueFromArray = LogicUtils.getValueFromArray(
        LogicUtils.getArrayFromJson(res, []),
        0,
        null,
      );
      var valueForProdIntent = LogicUtils.getDictfromDict(
        LogicUtils.getDictFromJsonObject(firstValueFromArray),
        "ProdIntent",
      );
      var hideHeader = LogicUtils.getBool(
        valueForProdIntent,
        ProdVerifyModalUtils.getStringFromVariant(/* IsCompleted */ 1),
        false,
      );
      if (!hideHeader) {
        valueForProdIntent[
          ProdVerifyModalUtils.getStringFromVariant(/* POCemail */ 0)
        ] = email;
      }
      Curry._1(setIsProdIntentCompleted, function (param) {
        return hideHeader;
      });
      return Curry._1(setInitialValues, function (param) {
        return valueForProdIntent;
      });
    } catch (exn) {
      return;
    }
  };
  React.useEffect(function () {
    getProdVerifyDetails(undefined);
  }, []);
  return React.createElement(ProdVerifyModal.make, {
    showModal: match.showProdIntentForm,
    setShowModal: match.setShowProdIntentForm,
    initialValues: Caml_option.some(match$1[0]),
    getProdVerifyDetails: getProdVerifyDetails,
  });
}

var make = ProdIntentForm;

export { make };
/* react Not a pure module */
