// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Recoil from "recoil";
import * as LoadedTable from "../../components/LoadedTable.bs.js";
import * as HistoryEntity from "./HistoryEntity.bs.js";
import * as HyperswitchAtom from "../../Recoils/HyperswitchAtom.bs.js";
import * as BreadCrumbNavigation from "../../genericUtils/BreadCrumbNavigation.bs.js";

function History$HistoryTable(props) {
  var records = props.records;
  var userPermissionJson = Recoil.useRecoilValue(
    HyperswitchAtom.userPermissionAtom,
  );
  var match = React.useState(function () {
    return 0;
  });
  return React.createElement(LoadedTable.make, {
    title: "History",
    showSerialNumber: true,
    actualData: records,
    totalResults: records.length,
    resultsPerPage: 10,
    offset: match[0],
    setOffset: match[1],
    entity: HistoryEntity.historyEntity(
      props.activeRoutingIds,
      userPermissionJson.workflowsManage,
    ),
    currrentFetchCount: records.length,
    hideTitle: true,
  });
}

var HistoryTable = {
  make: History$HistoryTable,
};

function History$BreadCrumbWrapper(props) {
  var baseLink = props.baseLink;
  var title = props.title;
  var title$1 = title !== undefined ? title : "Smart Routing Configuration";
  var baseLink$1 = baseLink !== undefined ? baseLink : "/routing";
  return React.createElement(
    React.Fragment,
    undefined,
    React.createElement(BreadCrumbNavigation.make, {
      path: [
        {
          title: title$1,
          link: baseLink$1,
        },
      ],
      currentPageTitle: props.pageTitle,
      cursorStyle: "cursor-pointer",
    }),
    props.children,
  );
}

var BreadCrumbWrapper = {
  make: History$BreadCrumbWrapper,
};

function $$History(props) {
  return React.createElement(History$HistoryTable, {
    records: props.records,
    activeRoutingIds: props.activeRoutingIds,
  });
}

var make = $$History;

export { HistoryTable, BreadCrumbWrapper, make };
/* react Not a pure module */
