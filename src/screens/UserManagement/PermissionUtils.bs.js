// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";

function mapPermissionTypeToString(permissionType) {
  if (typeof permissionType !== "number") {
    return permissionType._0;
  }
  switch (permissionType) {
    case /* OperationsView */ 0:
      return "operations_view";
    case /* OperationsManage */ 1:
      return "operations_manage";
    case /* ConnectorsView */ 2:
      return "connectors_view";
    case /* ConnectorsManage */ 3:
      return "connectors_manage";
    case /* WorkflowsView */ 4:
      return "workflows_view";
    case /* WorkflowsManage */ 5:
      return "workflows_manage";
    case /* AnalyticsView */ 6:
      return "analytics_view";
    case /* UsersView */ 7:
      return "users_view";
    case /* UsersManage */ 8:
      return "users_manage";
    case /* MerchantDetailsView */ 9:
      return "merchant_details_view";
    case /* MerchantDetailsManage */ 10:
      return "merchant_details_manage";
    case /* OrganizationManage */ 11:
      return "organization_manage";
  }
}

function mapStringToPermissionType(val) {
  switch (val) {
    case "analytics_view":
      return /* AnalyticsView */ 6;
    case "connectors_manage":
      return /* ConnectorsManage */ 3;
    case "connectors_view":
      return /* ConnectorsView */ 2;
    case "merchant_details_manage":
      return /* MerchantDetailsManage */ 10;
    case "merchant_details_view":
      return /* MerchantDetailsView */ 9;
    case "operations_manage":
      return /* OperationsManage */ 1;
    case "operations_view":
      return /* OperationsView */ 0;
    case "organization_manage":
      return /* OrganizationManage */ 11;
    case "users_manage":
      return /* UsersManage */ 8;
    case "users_view":
      return /* UsersView */ 7;
    case "workflows_manage":
      return /* WorkflowsManage */ 5;
    case "workflows_view":
      return /* WorkflowsView */ 4;
    default:
      return /* UnknownPermission */ {
        _0: val,
      };
  }
}

function getAccessValue(permissionValue, permissionList) {
  var isPermissionFound = permissionList.find(function (ele) {
    return Caml_obj.equal(ele, permissionValue);
  });
  if (Core__Option.isSome(isPermissionFound)) {
    return /* Access */ 1;
  } else {
    return /* NoAccess */ 0;
  }
}

function getPermissionJson(permissionList) {
  return {
    operationsView: getAccessValue(/* OperationsView */ 0, permissionList),
    operationsManage: getAccessValue(/* OperationsManage */ 1, permissionList),
    connectorsView: getAccessValue(/* ConnectorsView */ 2, permissionList),
    connectorsManage: getAccessValue(/* ConnectorsManage */ 3, permissionList),
    workflowsView: getAccessValue(/* WorkflowsView */ 4, permissionList),
    workflowsManage: getAccessValue(/* WorkflowsManage */ 5, permissionList),
    analyticsView: getAccessValue(/* AnalyticsView */ 6, permissionList),
    usersView: getAccessValue(/* UsersView */ 7, permissionList),
    usersManage: getAccessValue(/* UsersManage */ 8, permissionList),
    merchantDetailsView: getAccessValue(
      /* MerchantDetailsView */ 9,
      permissionList,
    ),
    merchantDetailsManage: getAccessValue(
      /* MerchantDetailsManage */ 10,
      permissionList,
    ),
    organizationManage: getAccessValue(
      /* OrganizationManage */ 11,
      permissionList,
    ),
  };
}

function linkForGetShowLinkViaAccess(permission, url) {
  if (permission === /* Access */ 1) {
    return url;
  } else {
    return "";
  }
}

function cursorStyles(permission) {
  if (permission === /* Access */ 1) {
    return "cursor-pointer";
  } else {
    return "cursor-not-allowed";
  }
}

var defaultValueForPermission = {
  operationsView: /* NoAccess */ 0,
  operationsManage: /* NoAccess */ 0,
  connectorsView: /* NoAccess */ 0,
  connectorsManage: /* NoAccess */ 0,
  workflowsView: /* NoAccess */ 0,
  workflowsManage: /* NoAccess */ 0,
  analyticsView: /* NoAccess */ 0,
  usersView: /* NoAccess */ 0,
  usersManage: /* NoAccess */ 0,
  merchantDetailsView: /* NoAccess */ 0,
  merchantDetailsManage: /* NoAccess */ 0,
  organizationManage: /* NoAccess */ 0,
};

export {
  mapPermissionTypeToString,
  mapStringToPermissionType,
  getAccessValue,
  defaultValueForPermission,
  getPermissionJson,
  linkForGetShowLinkViaAccess,
  cursorStyles,
};
/* No side effect */
