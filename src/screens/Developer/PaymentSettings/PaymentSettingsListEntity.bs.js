// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Table from "../../../components/Table.bs.js";
import * as EntityType from "../../../entities/EntityType.bs.js";
import * as LogicUtils from "../../../utils/LogicUtils.bs.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as PermissionUtils from "../../UserManagement/PermissionUtils.bs.js";
import * as HSwitchGlobalVars from "../../../utils/HSwitchGlobalVars.bs.js";
import * as BusinessMappingUtils from "../../Settings/BusinessMapping/BusinessMappingUtils.bs.js";
import * as BusinessProfileMapper from "../../../utils/Mappers/BusinessProfileMapper.bs.js";

var visibleColumns = [
  /* WebhookUrl */ 2, /* ReturnUrl */ 1, /* ProfileName */ 0,
];

var defaultColumns = [
  /* ProfileName */ 0, /* ReturnUrl */ 1, /* WebhookUrl */ 2,
];

var allColumns = [/* ProfileName */ 0, /* ReturnUrl */ 1, /* WebhookUrl */ 2];

function getHeading(colType) {
  switch (colType) {
    case /* ProfileName */ 0:
      return Table.makeHeaderInfo(
        "profile_name",
        "Profile Name",
        undefined,
        true,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
    case /* ReturnUrl */ 1:
      return Table.makeHeaderInfo(
        "return_url",
        "Return URL",
        undefined,
        true,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
    case /* WebhookUrl */ 2:
      return Table.makeHeaderInfo(
        "webhook_url",
        "Webhook URL",
        undefined,
        true,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
  }
}

function getCell(item, colType) {
  switch (colType) {
    case /* ProfileName */ 0:
      return {
        TAG: /* Text */ 1,
        _0: item.profile_name,
      };
    case /* ReturnUrl */ 1:
      return {
        TAG: /* Text */ 1,
        _0: Core__Option.getOr(item.return_url, ""),
      };
    case /* WebhookUrl */ 2:
      return {
        TAG: /* Text */ 1,
        _0: Core__Option.getOr(item.webhook_details.webhook_url, ""),
      };
  }
}

function itemToObjMapper(dict) {
  return {
    merchant_id: LogicUtils.getString(dict, "merchant_id", ""),
    profile_id: LogicUtils.getString(dict, "profile_id", ""),
    profile_name: LogicUtils.getString(
      dict,
      BusinessMappingUtils.getStringFromVariant(/* ProfileName */ 0),
      "",
    ),
    return_url: LogicUtils.getOptionString(dict, "return_url"),
    payment_response_hash_key: LogicUtils.getOptionString(
      dict,
      "payment_response_hash_key",
    ),
    webhook_details: BusinessProfileMapper.constructWebhookDetailsObject(
      LogicUtils.getObj(dict, "webhook_details", {}),
    ),
    authentication_connector_details:
      BusinessProfileMapper.constructAuthConnectorObject(
        LogicUtils.getObj(dict, "webhook_details", {}),
      ),
  };
}

function getItems(json) {
  return LogicUtils.getArrayDataFromJson(json, itemToObjMapper);
}

function webhookProfileTableEntity(permission) {
  return EntityType.makeEntity(
    "",
    getItems,
    defaultColumns,
    allColumns,
    getHeading,
    getCell,
    "",
    undefined,
    undefined,
    undefined,
    undefined,
    function (profile) {
      return PermissionUtils.linkForGetShowLinkViaAccess(
        permission,
        HSwitchGlobalVars.appendDashboardPath(
          "/payment-settings/" + profile.profile_id + "",
        ),
      );
    },
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
  );
}

export {
  visibleColumns,
  defaultColumns,
  allColumns,
  getHeading,
  getCell,
  itemToObjMapper,
  getItems,
  webhookProfileTableEntity,
};
/* Table Not a pure module */
