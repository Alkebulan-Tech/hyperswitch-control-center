// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Table from "../../components/Table.bs.js";
import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Core__JSON from "@rescript/core/src/Core__JSON.bs.js";
import * as EntityType from "../../entities/EntityType.bs.js";
import * as LogicUtils from "../../utils/LogicUtils.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as HelperComponents from "../Helpers/HelperComponents.bs.js";
import * as ConnectorListMapper from "../../utils/Mappers/ConnectorListMapper.bs.js";
import * as PaymentMethodConfig from "./PaymentMethodConfig.bs.js";
import * as PaymentMethodConfigUtils from "./PaymentMethodConfigUtils.bs.js";

var defaultColumns = [
  /* Profile */ 0, /* Processor */ 1, /* PaymentMethodType */ 2,
  /* PaymentMethod */ 3, /* CountriesAllowed */ 5, /* CurrenciesAllowed */ 6,
  /* CardNetwork */ 4,
];

function getHeading(colType) {
  switch (colType) {
    case /* Profile */ 0:
      return Table.makeHeaderInfo(
        "profile_id",
        "Profile",
        undefined,
        false,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
    case /* Processor */ 1:
      return Table.makeHeaderInfo(
        "connector_name",
        "Processor",
        undefined,
        false,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
    case /* PaymentMethodType */ 2:
      return Table.makeHeaderInfo(
        "payment_method_type",
        "Payment Method Type",
        undefined,
        false,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
    case /* PaymentMethod */ 3:
      return Table.makeHeaderInfo(
        "payment_method",
        "Payment Method",
        undefined,
        false,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
    case /* CardNetwork */ 4:
      return Table.makeHeaderInfo(
        "card_network",
        "Card Network",
        undefined,
        false,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
    case /* CountriesAllowed */ 5:
      return Table.makeHeaderInfo(
        "accepted_countries",
        "Countries Allowed",
        undefined,
        false,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
    case /* CurrenciesAllowed */ 6:
      return Table.makeHeaderInfo(
        "accepted_currencies",
        "Currencies Allowed",
        undefined,
        false,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
  }
}

function getCell(setReferesh) {
  return function (paymentMethodConfig, colType) {
    switch (colType) {
      case /* Profile */ 0:
        return {
          TAG: /* CustomCell */ 10,
          _0: React.createElement(PaymentMethodConfig.make, {
            paymentMethodConfig: paymentMethodConfig,
            setReferesh: setReferesh,
            element: Caml_option.some(
              React.createElement(
                HelperComponents.BusinessProfileComponent.make,
                {
                  profile_id: paymentMethodConfig.profile_id,
                },
              ),
            ),
          }),
          _1: "",
        };
      case /* Processor */ 1:
        return {
          TAG: /* CustomCell */ 10,
          _0: React.createElement(PaymentMethodConfig.make, {
            paymentMethodConfig: paymentMethodConfig,
            config: paymentMethodConfig.connector_name,
            setReferesh: setReferesh,
          }),
          _1: "",
        };
      case /* PaymentMethodType */ 2:
        return {
          TAG: /* CustomCell */ 10,
          _0: React.createElement(PaymentMethodConfig.make, {
            paymentMethodConfig: paymentMethodConfig,
            config: paymentMethodConfig.payment_method_type,
            setReferesh: setReferesh,
          }),
          _1: "",
        };
      case /* PaymentMethod */ 3:
        return {
          TAG: /* CustomCell */ 10,
          _0: React.createElement(PaymentMethodConfig.make, {
            paymentMethodConfig: paymentMethodConfig,
            config: paymentMethodConfig.payment_method,
            setReferesh: setReferesh,
          }),
          _1: "",
        };
      case /* CardNetwork */ 4:
        return {
          TAG: /* CustomCell */ 10,
          _0: React.createElement(PaymentMethodConfig.make, {
            paymentMethodConfig: paymentMethodConfig,
            config: paymentMethodConfig.card_networks.toString(),
            setReferesh: setReferesh,
          }),
          _1: "",
        };
      case /* CountriesAllowed */ 5:
        return {
          TAG: /* CustomCell */ 10,
          _0: React.createElement(PaymentMethodConfig.make, {
            paymentMethodConfig: paymentMethodConfig,
            setReferesh: setReferesh,
            element: Caml_option.some(
              PaymentMethodConfigUtils.getAdvanceConfiguration(
                paymentMethodConfig.accepted_countries,
              ),
            ),
          }),
          _1: "",
        };
      case /* CurrenciesAllowed */ 6:
        return {
          TAG: /* CustomCell */ 10,
          _0: React.createElement(PaymentMethodConfig.make, {
            paymentMethodConfig: paymentMethodConfig,
            setReferesh: setReferesh,
            element: Caml_option.some(
              PaymentMethodConfigUtils.getAdvanceConfiguration(
                paymentMethodConfig.accepted_currencies,
              ),
            ),
          }),
          _1: "",
        };
    }
  };
}

function itemObjMapper(dict, mappedArr) {
  var connectorPayload = ConnectorListMapper.getProcessorPayloadType(dict);
  var paymentMethod = LogicUtils.getArrayDataFromJson(
    Core__Option.getOr(dict["payment_methods_enabled"], {}),
    ConnectorListMapper.getPaymentMethodsEnabled,
  );
  if (
    LogicUtils.getString(dict, "connector_type", "") === "payment_processor"
  ) {
    paymentMethod.forEach(function (param, pmIndex) {
      PaymentMethodConfigUtils.mapPaymentMethodValues(
        connectorPayload,
        mappedArr,
        pmIndex,
        undefined,
        undefined,
      );
    });
    return;
  }
}

function getFilterdConnectorList(json, filters) {
  var mappedArr = [];
  Belt_Array.keepMap(
    Core__Option.getOr(Core__JSON.Decode.array(json), []),
    Core__JSON.Decode.object,
  ).map(function (dict) {
    PaymentMethodConfigUtils.filterItemObjMapper(dict, mappedArr, filters);
  });
  return mappedArr;
}

function getConnectedList(json) {
  var mappedArr = [];
  Belt_Array.keepMap(
    Core__Option.getOr(Core__JSON.Decode.array(json), []),
    Core__JSON.Decode.object,
  ).map(function (dict) {
    itemObjMapper(dict, mappedArr);
  });
  return mappedArr;
}

function paymentMethodEntity(setReferesh) {
  return EntityType.makeEntity(
    "",
    getConnectedList,
    defaultColumns,
    undefined,
    getHeading,
    getCell(setReferesh),
    "",
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
  );
}

export {
  defaultColumns,
  getHeading,
  getCell,
  itemObjMapper,
  getFilterdConnectorList,
  getConnectedList,
  paymentMethodEntity,
};
/* Table Not a pure module */
