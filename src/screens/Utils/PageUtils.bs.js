// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Icon from "../../components/Icon.bs.js";
import * as React from "react";
import * as UIUtils from "../../utils/UIUtils.bs.js";
import * as LogicUtils from "../../utils/LogicUtils.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as HSwitchUtils from "./HSwitchUtils.bs.js";

function PageUtils$PageHeading(props) {
  var leftIcon = props.leftIcon;
  var customTagStyle = props.customTagStyle;
  var tagText = props.tagText;
  var isTag = props.isTag;
  var customHeadingStyle = props.customHeadingStyle;
  var customSubTitleStyle = props.customSubTitleStyle;
  var customTitleStyle = props.customTitleStyle;
  var subTitle = props.subTitle;
  var customTitleStyle$1 =
    customTitleStyle !== undefined ? customTitleStyle : "";
  var customSubTitleStyle$1 =
    customSubTitleStyle !== undefined
      ? customSubTitleStyle
      : "text-lg font-medium";
  var customHeadingStyle$1 =
    customHeadingStyle !== undefined ? customHeadingStyle : "py-2";
  var isTag$1 = isTag !== undefined ? isTag : false;
  var tagText$1 = tagText !== undefined ? tagText : "";
  var customTagStyle$1 =
    customTagStyle !== undefined
      ? customTagStyle
      : "bg-extra-light-grey border-light-grey";
  var leftIcon$1 =
    leftIcon !== undefined ? Caml_option.valFromOption(leftIcon) : undefined;
  var headerTextStyle = HSwitchUtils.getTextClass([
    /* H1 */ 0, /* Optional */ 4,
  ]);
  return React.createElement(
    "div",
    {
      className: "" + customHeadingStyle$1 + "",
    },
    leftIcon$1 !== undefined
      ? React.createElement(Icon.make, {
          name: leftIcon$1,
          size: 56,
        })
      : null,
    React.createElement(
      "div",
      {
        className: "flex items-center gap-4",
      },
      React.createElement(
        "div",
        {
          className: "" + headerTextStyle + " " + customTitleStyle$1 + "",
        },
        props.title,
      ),
      React.createElement(UIUtils.RenderIf.make, {
        condition: isTag$1,
        children: React.createElement(
          "div",
          {
            className:
              "text-sm text-grey-700 font-semibold border  rounded-full px-2 py-1 " +
              customTagStyle$1 +
              "",
          },
          tagText$1,
        ),
      }),
    ),
    subTitle !== undefined
      ? React.createElement(UIUtils.RenderIf.make, {
          condition: LogicUtils.isNonEmptyString(subTitle),
          children: React.createElement(
            "div",
            {
              className: "opacity-50 mt-2 " + customSubTitleStyle$1 + "",
            },
            subTitle,
          ),
        })
      : null,
  );
}

var PageHeading = {
  make: PageUtils$PageHeading,
};

export { PageHeading };
/* Icon Not a pure module */
