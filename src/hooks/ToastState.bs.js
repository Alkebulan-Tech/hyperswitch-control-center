// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Recoil from "../libraries/Recoil.bs.js";
import * as Recoil$1 from "recoil";
import * as Core__Math from "@rescript/core/src/Core__Math.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Array from "@rescript/core/src/Core__Array.bs.js";

function randomString(length, chars) {
  return Core__Array.reduce(
    Core__Array.make(length, 0),
    "",
    function (acc, param) {
      var charIndex = Core__Math.Int.random(0, chars.length);
      var newChar = chars.charAt(charIndex);
      return acc + newChar;
    },
  );
}

function makeToastProps(
  message,
  toastType,
  autoCloseOpt,
  toastDurationOpt,
  buttonText,
  helpLink,
  toastElementOpt,
  param,
) {
  var autoClose = autoCloseOpt !== undefined ? autoCloseOpt : false;
  var toastDuration = toastDurationOpt !== undefined ? toastDurationOpt : 0;
  var toastElement =
    toastElementOpt !== undefined
      ? Caml_option.valFromOption(toastElementOpt)
      : null;
  var rString = randomString(
    32,
    "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
  );
  return {
    toastKey: rString,
    message: message,
    toastType: toastType,
    autoClose: autoClose,
    toastDuration: toastDuration,
    buttonText: buttonText,
    helpLink: helpLink,
    toastElement: toastElement,
  };
}

var defaultOpenToasts = [];

var openToasts = Recoil.atom("openToasts", defaultOpenToasts);

function useShowToast(param) {
  var setOpenToasts = Recoil$1.useSetRecoilState(openToasts);
  return React.useMemo(
    function () {
      return function (
        param,
        param$1,
        param$2,
        param$3,
        param$4,
        param$5,
        param$6,
        param$7,
      ) {
        var toastDuration = param$2 !== undefined ? param$2 : 0;
        var autoClose = param$3 !== undefined ? param$3 : false;
        var toastElement =
          param$6 !== undefined ? Caml_option.valFromOption(param$6) : null;
        var toastProps = makeToastProps(
          param,
          param$1,
          autoClose,
          toastDuration,
          param$4,
          param$5,
          Caml_option.some(toastElement),
          undefined,
        );
        return setOpenToasts(function (prevArr) {
          return prevArr.concat([toastProps]);
        });
      };
    },
    [setOpenToasts],
  );
}

export {
  randomString,
  makeToastProps,
  defaultOpenToasts,
  openToasts,
  useShowToast,
};
/* openToasts Not a pure module */
