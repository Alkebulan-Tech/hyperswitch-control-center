// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Icon from "./Icon.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as LogicUtils from "../utils/LogicUtils.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function ShowDetails$EntityData(props) {
  var entity = props.entity;
  var syncData = props.syncData;
  var dictData = props.dictData;
  var syncData$1 =
    syncData !== undefined ? Caml_option.valFromOption(syncData) : {};
  return React.createElement(
    "div",
    {
      className: "flex flex-1 flex-col overflow-scroll  pl-1 pr-2",
    },
    props.detailsKeyList.map(function (key, idx) {
      var json = syncData$1[key];
      if (json !== undefined) {
        return React.createElement(
          "div",
          {
            key: idx.toString(),
          },
          Curry._2(
            entity.detailsPageLayout,
            Caml_option.valFromOption(json),
            key,
          ),
        );
      }
      var json$1 = dictData[key];
      if (json$1 !== undefined) {
        return React.createElement(
          "div",
          {
            key: idx.toString(),
          },
          Curry._2(
            entity.detailsPageLayout,
            Caml_option.valFromOption(json$1),
            key,
          ),
        );
      } else {
        return null;
      }
    }),
  );
}

var EntityData = {
  make: ShowDetails$EntityData,
};

function ShowDetails$MerchantDetails(props) {
  var dictData = props.dictData;
  var merchantId = LogicUtils.getString(dictData, "merchantId", "-");
  var parentMerchantId = LogicUtils.getString(
    dictData,
    "parentMerchantId",
    "-",
  );
  var match = React.useState(function () {
    return true;
  });
  var setIsExpanded = match[1];
  var isExpanded = match[0];
  return React.createElement(
    "div",
    {
      className:
        "flex flex-col border border-jp-gray-500 mt-4  dark:border-jp-gray-960",
    },
    React.createElement(
      "div",
      {
        className: "flex flex-col justify-between",
      },
      React.createElement(
        "div",
        {
          className:
            "flex flex-row justify-between p-4 font-bold border-4 border-jp-gray-500  from-gray-100 bg-gradient-to-b from-jp-gray-200 to-jp-gray-300 dark:from-jp-gray-950  dark:to-jp-gray-950 text-jp-gray-800 dark:text-jp-gray-text_darktheme dark:text-opacity-75 whitespace-pre",
        },
        React.createElement(
          "div",
          {
            className: "justify-items-center  font-bold text-2xl",
          },
          "Merchant Details",
        ),
        React.createElement(
          "div",
          {
            className: "flex flex-row cursor-pointer justify-items-center",
            onClick: function (param) {
              Curry._1(setIsExpanded, function (prev) {
                return !prev;
              });
            },
          },
          React.createElement(
            "div",
            {
              className: "mt-1",
            },
            React.createElement(Icon.make, {
              name: isExpanded ? "compress-alt" : "expand-alt",
              size: 13,
            }),
          ),
          React.createElement(
            "div",
            {
              className: "font-normal ml-1",
            },
            isExpanded ? "Collapse" : "Expand",
          ),
        ),
      ),
    ),
    isExpanded
      ? React.createElement(
          React.Fragment,
          undefined,
          React.createElement(
            "div",
            {
              className: "p-4   grid grid-cols-2",
            },
            React.createElement(
              "div",
              {
                className: "flex flex-row justify-between",
              },
              React.createElement(
                "div",
                undefined,
                React.createElement("span", undefined, "Merchant ID :"),
                React.createElement(
                  "span",
                  {
                    className: "ml-2 font-bold",
                  },
                  merchantId,
                ),
              ),
              React.createElement(
                "div",
                undefined,
                React.createElement("span", undefined, "Parent Merchant ID :"),
                React.createElement(
                  "span",
                  {
                    className: "ml-2 font-bold",
                  },
                  parentMerchantId,
                ),
              ),
            ),
          ),
          React.createElement(ShowDetails$EntityData, {
            dictData: dictData,
            syncData: Caml_option.some(props.syncData),
            detailsKeyList: props.detailsKeyList,
            entity: props.entity,
          }),
        )
      : null,
  );
}

var MerchantDetails = {
  make: ShowDetails$MerchantDetails,
};

export { EntityData, MerchantDetails };
/* Icon Not a pure module */
