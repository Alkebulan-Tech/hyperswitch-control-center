// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Icon from "../Icon.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Recoil from "recoil";
import * as ModalsState from "../../hooks/ModalsState.bs.js";
import * as JsxPPXReactSupport from "rescript/lib/es6/jsxPPXReactSupport.js";

function ModalContainer$ModalHeading(props) {
  var hideModal = props.hideModal;
  var handleClick = React.useCallback(
    function (_ev) {
      Curry._1(hideModal, undefined);
    },
    [hideModal],
  );
  return React.createElement(
    "div",
    {
      className: "bg-purple-300 p-4 text-lg flex flex-row justify-between",
    },
    React.createElement("div", undefined, props.title),
    React.createElement(
      "button",
      {
        className: "text-purple-700",
        onClick: handleClick,
      },
      React.createElement(Icon.make, {
        name: "times",
      }),
    ),
  );
}

var ModalHeading = {
  make: ModalContainer$ModalHeading,
};

function ModalContainer$Modal(props) {
  var index = props.index;
  var hideModalAtIndex = props.hideModalAtIndex;
  var modalProps = props.modalProps;
  var hideModal = React.useCallback(
    function (param) {
      Curry._1(hideModalAtIndex, index);
    },
    [hideModalAtIndex, index],
  );
  var handleOutsideClick = React.useCallback(
    function (_ev) {
      if (modalProps.closeOnClickOutside) {
        return Curry._1(hideModal, undefined);
      }
    },
    [modalProps.closeOnClickOutside, hideModal],
  );
  var stopPropagation = React.useCallback(function (ev) {
    ev.stopPropagation();
  }, []);
  return React.createElement(
    "div",
    {
      className:
        "absolute inset-0 overflow-scroll bg-gray-500 bg-opacity-50 flex flex-col items-center",
      onClick: handleOutsideClick,
    },
    React.createElement(
      "div",
      {
        className: "w-full md:w-4/5 lg:w-3/5 md:my-40 shadow-lg",
        onClick: stopPropagation,
      },
      React.createElement(ModalContainer$ModalHeading, {
        title: modalProps.title,
        hideModal: hideModal,
      }),
      React.createElement(
        "div",
        {
          className: "bg-white p-4",
        },
        Curry._1(modalProps.getContent, hideModal),
      ),
    ),
  );
}

var Modal = {
  make: ModalContainer$Modal,
};

function ModalContainer(props) {
  var match = Recoil.useRecoilState(ModalsState.openModals);
  var setOpenModals = match[1];
  var hideModalAtIndex = React.useCallback(
    function (index) {
      setOpenModals(function (prevArr) {
        return prevArr.filter(function (param, i) {
          return i !== index;
        });
      });
    },
    [setOpenModals],
  );
  return React.createElement(
    "div",
    {
      className: "relative font-ibm-plex",
    },
    props.children,
    React.createElement(
      "div",
      undefined,
      match[0].map(function (modalProps, i) {
        return JsxPPXReactSupport.createElementWithKey(
          i.toString(),
          ModalContainer$Modal,
          {
            modalProps: modalProps,
            hideModalAtIndex: hideModalAtIndex,
            index: i,
          },
        );
      }),
    ),
  );
}

var make = ModalContainer;

export { ModalHeading, Modal, make };
/* Icon Not a pure module */
